"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Settlements = exports.getCallbackUrl = exports.Refunds = exports.Cancellations = exports.Authorizations = void 0;
exports.Authorizations = {
    approve: ({ paymentId }, approveArgs) => {
        return {
            paymentId,
            status: 'approved',
            acquirer: null,
            code: null,
            message: null,
            delayToAutoSettle: undefined,
            delayToAutoSettleAfterAntifraud: undefined,
            ...approveArgs,
        };
    },
    approveCard: ({ paymentId }, approvedCardArgs) => {
        return {
            paymentId,
            status: 'approved',
            acquirer: null,
            code: null,
            message: null,
            delayToAutoSettle: undefined,
            delayToAutoSettleAfterAntifraud: undefined,
            ...approvedCardArgs,
        };
    },
    approveBankInvoice: ({ paymentId }, approvedBankInvoiceArgs) => {
        return {
            paymentId,
            status: 'approved',
            delayToCancel: undefined,
            acquirer: null,
            code: null,
            message: null,
            identificationNumber: undefined,
            identificationNumberFormatted: undefined,
            barCodeImageType: undefined,
            barCodeImageNumber: undefined,
            ...approvedBankInvoiceArgs,
        };
    },
    deny: ({ paymentId }, denyArgs) => {
        return {
            paymentId,
            status: 'denied',
            acquirer: undefined,
            tid: undefined,
            code: null,
            message: null,
            ...denyArgs,
        };
    },
    pending: ({ paymentId }, pendingArgs) => {
        return {
            paymentId,
            status: 'undefined',
            acquirer: null,
            code: null,
            message: null,
            paymentAppData: undefined,
            tid: null,
            paymentUrl: null,
            authorizationId: null,
            ...pendingArgs,
        };
    },
    pendingBankInvoice: ({ paymentId }, pendingArgs) => {
        return {
            paymentId,
            status: 'undefined',
            acquirer: null,
            code: null,
            message: null,
            paymentAppData: null,
            identificationNumber: undefined,
            identificationNumberFormatted: undefined,
            barCodeImageNumber: undefined,
            barCodeImageType: undefined,
            tid: null,
            authorizationId: null,
            ...pendingArgs,
        };
    },
    redirect: ({ paymentId }, actionRequired) => {
        return {
            paymentId,
            status: 'undefined',
            acquirer: null,
            code: null,
            message: null,
            paymentAppData: null,
            redirectUrl: undefined,
            tid: null,
            paymentUrl: null,
            authorizationId: null,
            ...actionRequired,
        };
    },
};
exports.Cancellations = {
    approve: ({ paymentId }, cancellationArgs) => {
        return {
            paymentId,
            code: null,
            message: null,
            ...cancellationArgs,
        };
    },
    manual: ({ paymentId }, cancellationArgs) => {
        return {
            paymentId,
            code: 'cancel-manually',
            cancellationId: null,
            message: null,
            ...cancellationArgs,
        };
    },
    deny: ({ paymentId }, cancellationArgs) => {
        return {
            paymentId,
            cancellationId: null,
            code: null,
            message: null,
            ...cancellationArgs,
        };
    },
};
exports.Refunds = {
    approve: ({ paymentId, requestId, value }, refundArgs) => {
        return {
            paymentId,
            requestId,
            value,
            code: null,
            message: null,
            ...refundArgs,
        };
    },
    manual: ({ paymentId, requestId }, refundArgs) => {
        return {
            paymentId,
            requestId,
            code: 'refund-manually',
            value: 0,
            message: null,
            refundId: null,
            ...refundArgs,
        };
    },
    deny: ({ paymentId, requestId }, refundArgs) => {
        return {
            paymentId,
            requestId,
            refundId: null,
            value: 0,
            code: null,
            message: null,
            ...refundArgs,
        };
    },
};
const getCallbackUrl = (request) => typeof request === 'string' ? request : request.callbackUrl;
exports.getCallbackUrl = getCallbackUrl;
exports.Settlements = {
    approve: ({ paymentId, requestId, value }, settleArgs) => {
        return {
            paymentId,
            requestId,
            value,
            code: null,
            message: null,
            ...settleArgs,
        };
    },
    deny: ({ paymentId, requestId }, settleArgs) => {
        return {
            paymentId,
            requestId,
            settleId: null,
            value: 0,
            code: null,
            message: null,
            ...settleArgs,
        };
    },
};
